using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Newtonsoft.Json;
using LiveCharts;
using LiveCharts.Wpf;
using System.Reflection.Emit;
using LiveCharts.Definitions.Charts;
using LiveCharts.Defaults;
using LiveCharts.Wpf.Charts.Base;

namespace WpfApp1
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
       public SeriesCollection SeriesCollection { get; set;}
        public ChartValues<double> Values1 { get; set; }
        public ChartValues<double> Values2 { get; set; }

        public MainWindow()
        {
            InitializeComponent();




        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            ReaderFromJson readerFromJson = new ReaderFromJson();
            List<UserInTable> listPeople = readerFromJson.ReadFromJsonFile();          
            DataGridView.ItemsSource = listPeople;
            //DataGridView.Row
        }
      

        private void DataGrid_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            //DataGridView.Columns.Add("newColumnName", "Column Name in Text");
        }

       
            private void DataGridView_Loaded(object sender, RoutedEventArgs e)
        {
            ReaderFromJson readerFromJson = new ReaderFromJson();
             List<UserInTable> listPeople = readerFromJson.ReadFromJsonFile();
            DataGridView.ItemsSource = listPeople;
           // DataGridView.Columns[0].HeaderText = "название столбца";
        }

        public int [] DataForChart()
        {
           
                UserInTable userInTable = (UserInTable)DataGridView.SelectedItem;
                string nameA = userInTable.UserName;
                string nameFromGridView = nameA;
                ReaderFromJson readerFromJson = new ReaderFromJson();
                var BigUser = readerFromJson.ReadFromJsonFile();
                var ListForGrid = ReaderFromJson.ListForGridView; // Копия BigUser - лист со всеми значениями ищ папки JSON
                int[] DayWithValue = new int[userInTable.CountDay];
                int countDay = 0;
                foreach (var Data in ListForGrid)
                {
                    if (Data.UserName == nameFromGridView)
                    {
                        DayWithValue[countDay] = Data.Steps;
                        countDay++;
                    }
                }
               
                return DayWithValue;
          
        }

        private void DataGridView_MouseDoubleClick(object sender, MouseButtonEventArgs e)
        {
            int[] ints = DataForChart();
            ReaderFromJson readerFromJson = new ReaderFromJson();

            List<UserInTable> ChartList = readerFromJson.ReadFromJsonFile();
            SeriesCollection series = new SeriesCollection();
            ChartValues<int> ass = new ChartValues<int>();
            for (int i = 0; i < ints.Count(); i++)
            {
                ass.Add(ints[i]);
                series.Add(new LineSeries() { Title = i.ToString(), Values = ass });
            }
            Chart.Series = series;
        }
        ChartValues<ObservablePoint> series = new ChartValues<ObservablePoint>();
        private void Button_Click_1(object sender, RoutedEventArgs e) // логика построения графика
        {
            
                int[] ints = DataForChart();
                ReaderFromJson readerFromJson = new ReaderFromJson();

                List<UserInTable> ChartList = readerFromJson.ReadFromJsonFile();

                SeriesCollection series = new SeriesCollection();
            ChartValues<int> ass = new ChartValues<int>();
                for (int i = 0; i < ints.Count(); i++)
                {

                   
                ass.Add(ints[i]);
                    series.Add(new LineSeries() { Title = i.ToString(), Values = ass });
                }
            Chart.Series = series;
           
        }
        // нужен метод который считыват строку выбирает от туда имя пользователя ищет его в бигюзере потом идёт в метод на верху
        private void Window_Loaded(object sender, RoutedEventArgs e)
        {
          
        }

        private void DataGridView_AutoGeneratedColumns(object sender, EventArgs e)
        {
           
        }
    }
}
